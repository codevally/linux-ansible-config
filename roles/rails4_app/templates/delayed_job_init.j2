#!/bin/sh# Init script for delayed_job workers for {{ app_name }}## {{ ansible_managed }}APP_USER={{ app_user_name }}JOBS_RAILS_ENV={{ app_environment }}APP_PATH="/home/$APP_USER/public_html/{{ app_name }}"PATH=$PATH:/home/$APP_USER/.rvm/bincase "$1" in   start-worker)   echo -n "Starting delayed_job $2 for $APP_PATH: "   su - $APP_USER -c "cd $APP_PATH/current; RAILS_ENV=$JOBS_RAILS_ENV bin/rails runner'Delayed::Job.all.each {|j| j.update_attributes({:locked_by => nil, :locked_at => nil}) }'" >>$APP_PATH/shared/log/delayed_job.log 2>&1   su - $APP_USER -c "cd $APP_PATH/current; RAILS_ENV=$JOBS_RAILS_ENV bin/delayed_job start--identifier=$2" >> $APP_PATH/shared/log/delayed_job.log 2>&1echo "done.";;
start)
echo -n "Starting delayed_job for $APP_PATH: "   su - $APP_USER -c "cd $APP_PATH/current; RAILS_ENV=$JOBS_RAILS_ENV bin/rails runner'Delayed::Job.all.each {|j| j.update_attributes({:locked_by => nil, :locked_at => nil}) }'" >>$APP_PATH/shared/log/delayed_job.log 2>&1   su - $APP_USER -c "cd $APP_PATH/current; RAILS_ENV=$JOBS_RAILS_ENV bin/delayed_job start -n{{ app_workers }}" >>$APP_PATH/shared/log/delayed_job.log 2>&1   echo "done."   ;;   stop-worker)   echo -n "Stopping delayed_job $2 for $APP_PATH: "   if cat $APP_PATH/current/tmp/pids/delayed_job.$2.pid > /dev/null 2>&1 ; then     su - $APP_USER -c "cat $APP_PATH/current/tmp/pids/delayed_job.$2.pid | xargs kill"   fi   echo "done."   ;;   stop)     echo -n "Stopping delayed_job for $APP_PATH: "     su - $APP_USER -c "cd $APP_PATH/current; RAILS_ENV=$JOBS_RAILS_ENV bin/delayed_job stop" >>$APP_PATH/shared/log/delayed_job.log 2>&1   if cat $APP_PATH/current/tmp/pids/delayed_job*.pid > /dev/null 2>&1 ; then     su - $APP_USER -c "cat $APP_PATH/current/tmp/pids/delayed_job*.pid | xargs kill"   fi   echo "done."   ;;   *)   echo "Usage: $N {start|stop|start-worker|stop-worker}" >&2   exit 1   ;;esac